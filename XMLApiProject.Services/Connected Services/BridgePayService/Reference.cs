//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BridgePayService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseObjectResponse", Namespace="http://schemas.datacontract.org/2004/07/Bridgepay.Core.DataContracts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BridgePayService.VoidRefundObjectResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BridgePayService.MerchantInfoObjectResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BridgePayService.TokenObjectResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(BridgePayService.AuthObjectResponse))]
    public partial class BaseObjectResponse : object
    {
        
        private string GatewayMessageField;
        
        private string GatewayResultField;
        
        private string GatewayTransIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GatewayMessage
        {
            get
            {
                return this.GatewayMessageField;
            }
            set
            {
                this.GatewayMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GatewayResult
        {
            get
            {
                return this.GatewayResultField;
            }
            set
            {
                this.GatewayResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GatewayTransId
        {
            get
            {
                return this.GatewayTransIdField;
            }
            set
            {
                this.GatewayTransIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoidRefundObjectResponse", Namespace="http://schemas.datacontract.org/2004/07/Bridgepay.Core.DataContracts")]
    public partial class VoidRefundObjectResponse : BridgePayService.BaseObjectResponse
    {
        
        private string MerchantAccountCodeField;
        
        private string ReferenceNumberField;
        
        private int RemainingAmountField;
        
        private string ResponseTypeField;
        
        private string TransactionCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MerchantAccountCode
        {
            get
            {
                return this.MerchantAccountCodeField;
            }
            set
            {
                this.MerchantAccountCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNumber
        {
            get
            {
                return this.ReferenceNumberField;
            }
            set
            {
                this.ReferenceNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemainingAmount
        {
            get
            {
                return this.RemainingAmountField;
            }
            set
            {
                this.RemainingAmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponseType
        {
            get
            {
                return this.ResponseTypeField;
            }
            set
            {
                this.ResponseTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionCode
        {
            get
            {
                return this.TransactionCodeField;
            }
            set
            {
                this.TransactionCodeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MerchantInfoObjectResponse", Namespace="http://schemas.datacontract.org/2004/07/Bridgepay.Core.DataContracts")]
    public partial class MerchantInfoObjectResponse : BridgePayService.BaseObjectResponse
    {
        
        private string MerchantAccountCodeField;
        
        private string MerchantCodeField;
        
        private string MerchantNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MerchantAccountCode
        {
            get
            {
                return this.MerchantAccountCodeField;
            }
            set
            {
                this.MerchantAccountCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MerchantCode
        {
            get
            {
                return this.MerchantCodeField;
            }
            set
            {
                this.MerchantCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MerchantName
        {
            get
            {
                return this.MerchantNameField;
            }
            set
            {
                this.MerchantNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenObjectResponse", Namespace="http://schemas.datacontract.org/2004/07/Bridgepay.Core.DataContracts")]
    public partial class TokenObjectResponse : BridgePayService.BaseObjectResponse
    {
        
        private string TokenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token
        {
            get
            {
                return this.TokenField;
            }
            set
            {
                this.TokenField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthObjectResponse", Namespace="http://schemas.datacontract.org/2004/07/Bridgepay.Core.DataContracts")]
    public partial class AuthObjectResponse : BridgePayService.BaseObjectResponse
    {
        
        private string AVSMessageField;
        
        private string AVSResultField;
        
        private string AuthorizationCodeField;
        
        private int AuthorizedAmountField;
        
        private int BalanceField;
        
        private string CVMessageField;
        
        private string CVResultField;
        
        private string CardTypeField;
        
        private int CashBackAmountField;
        
        private string CurrencyCodeField;
        
        private string ExpirationDateField;
        
        private bool IsCommercialCardField;
        
        private int OriginalAmountField;
        
        private string ReferenceNumberField;
        
        private int RemainingAmountField;
        
        private string StreetMatchMessageField;
        
        private string TokenField;
        
        private string TransactionCodeField;
        
        private System.DateTime TransactionDateField;
        
        private string WalletIDField;
        
        private string WalletPaymentMethodIDField;
        
        private string WalletResponseCodeField;
        
        private string WalletResponseMessageField;
        
        private string ZipMatchMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AVSMessage
        {
            get
            {
                return this.AVSMessageField;
            }
            set
            {
                this.AVSMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AVSResult
        {
            get
            {
                return this.AVSResultField;
            }
            set
            {
                this.AVSResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthorizationCode
        {
            get
            {
                return this.AuthorizationCodeField;
            }
            set
            {
                this.AuthorizationCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorizedAmount
        {
            get
            {
                return this.AuthorizedAmountField;
            }
            set
            {
                this.AuthorizedAmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Balance
        {
            get
            {
                return this.BalanceField;
            }
            set
            {
                this.BalanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CVMessage
        {
            get
            {
                return this.CVMessageField;
            }
            set
            {
                this.CVMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CVResult
        {
            get
            {
                return this.CVResultField;
            }
            set
            {
                this.CVResultField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardType
        {
            get
            {
                return this.CardTypeField;
            }
            set
            {
                this.CardTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CashBackAmount
        {
            get
            {
                return this.CashBackAmountField;
            }
            set
            {
                this.CashBackAmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyCode
        {
            get
            {
                return this.CurrencyCodeField;
            }
            set
            {
                this.CurrencyCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpirationDate
        {
            get
            {
                return this.ExpirationDateField;
            }
            set
            {
                this.ExpirationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCommercialCard
        {
            get
            {
                return this.IsCommercialCardField;
            }
            set
            {
                this.IsCommercialCardField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OriginalAmount
        {
            get
            {
                return this.OriginalAmountField;
            }
            set
            {
                this.OriginalAmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNumber
        {
            get
            {
                return this.ReferenceNumberField;
            }
            set
            {
                this.ReferenceNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemainingAmount
        {
            get
            {
                return this.RemainingAmountField;
            }
            set
            {
                this.RemainingAmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetMatchMessage
        {
            get
            {
                return this.StreetMatchMessageField;
            }
            set
            {
                this.StreetMatchMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token
        {
            get
            {
                return this.TokenField;
            }
            set
            {
                this.TokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionCode
        {
            get
            {
                return this.TransactionCodeField;
            }
            set
            {
                this.TransactionCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TransactionDate
        {
            get
            {
                return this.TransactionDateField;
            }
            set
            {
                this.TransactionDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WalletID
        {
            get
            {
                return this.WalletIDField;
            }
            set
            {
                this.WalletIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WalletPaymentMethodID
        {
            get
            {
                return this.WalletPaymentMethodIDField;
            }
            set
            {
                this.WalletPaymentMethodIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WalletResponseCode
        {
            get
            {
                return this.WalletResponseCodeField;
            }
            set
            {
                this.WalletResponseCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WalletResponseMessage
        {
            get
            {
                return this.WalletResponseMessageField;
            }
            set
            {
                this.WalletResponseMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipMatchMessage
        {
            get
            {
                return this.ZipMatchMessageField;
            }
            set
            {
                this.ZipMatchMessageField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://bridgepaynetsecuretx.com/requesthandler", ConfigurationName="BridgePayService.IRequestHandler")]
    public interface IRequestHandler
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessRequest", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessRequestResp" +
            "onse")]
        System.Threading.Tasks.Task<string> ProcessRequestAsync(string requestMsg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessJsonRequest" +
            "", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessJsonRequest" +
            "Response")]
        System.Threading.Tasks.Task<string> ProcessJsonRequestAsync(string requestMsg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessWebLinkAuth" +
            "", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessWebLinkAuth" +
            "Response")]
        System.Threading.Tasks.Task<BridgePayService.AuthObjectResponse> ProcessWebLinkAuthAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessWebLinkVoid" +
            "Refund", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/ProcessWebLinkVoid" +
            "RefundResponse")]
        System.Threading.Tasks.Task<BridgePayService.VoidRefundObjectResponse> ProcessWebLinkVoidRefundAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/GetMerchantInfo", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/GetMerchantInfoRes" +
            "ponse")]
        System.Threading.Tasks.Task<BridgePayService.MerchantInfoObjectResponse> GetMerchantInfoAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/GetToken", ReplyAction="http://bridgepaynetsecuretx.com/requesthandler/IRequestHandler/GetTokenResponse")]
        System.Threading.Tasks.Task<BridgePayService.TokenObjectResponse> GetTokenAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface IRequestHandlerChannel : BridgePayService.IRequestHandler, System.ServiceModel.IClientChannel
    {
    }
    
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class RequestHandlerClient : System.ServiceModel.ClientBase<BridgePayService.IRequestHandler>, BridgePayService.IRequestHandler
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public RequestHandlerClient() : 
                base(RequestHandlerClient.GetDefaultBinding(), RequestHandlerClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IRequestHandler.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestHandlerClient(EndpointConfiguration endpointConfiguration) : 
                base(RequestHandlerClient.GetBindingForEndpoint(endpointConfiguration), RequestHandlerClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestHandlerClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(RequestHandlerClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestHandlerClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(RequestHandlerClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RequestHandlerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> ProcessRequestAsync(string requestMsg)
        {
            return base.Channel.ProcessRequestAsync(requestMsg);
        }
        
        public System.Threading.Tasks.Task<string> ProcessJsonRequestAsync(string requestMsg)
        {
            return base.Channel.ProcessJsonRequestAsync(requestMsg);
        }
        
        public System.Threading.Tasks.Task<BridgePayService.AuthObjectResponse> ProcessWebLinkAuthAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs)
        {
            return base.Channel.ProcessWebLinkAuthAsync(nameValuePairs);
        }
        
        public System.Threading.Tasks.Task<BridgePayService.VoidRefundObjectResponse> ProcessWebLinkVoidRefundAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs)
        {
            return base.Channel.ProcessWebLinkVoidRefundAsync(nameValuePairs);
        }
        
        public System.Threading.Tasks.Task<BridgePayService.MerchantInfoObjectResponse> GetMerchantInfoAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs)
        {
            return base.Channel.GetMerchantInfoAsync(nameValuePairs);
        }
        
        public System.Threading.Tasks.Task<BridgePayService.TokenObjectResponse> GetTokenAsync(System.Collections.Generic.Dictionary<string, string> nameValuePairs)
        {
            return base.Channel.GetTokenAsync(nameValuePairs);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IRequestHandler))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IRequestHandler))
            {
                return new System.ServiceModel.EndpointAddress("https://www.bridgepaynetsecuretest.com/PaymentService/RequestHandler.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return RequestHandlerClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IRequestHandler);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return RequestHandlerClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IRequestHandler);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IRequestHandler,
        }
    }
}
